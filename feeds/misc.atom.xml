<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Michael Reneer</title><link href="http://michaelreneer.com/" rel="alternate"></link><link href="http://localhost:8000/feeds/misc.atom.xml" rel="self"></link><id>http://michaelreneer.com/</id><updated>2012-12-09T00:00:00-05:00</updated><entry><title>Hello World</title><link href="http://michaelreneer.com/hello-world/" rel="alternate"></link><updated>2012-12-09T00:00:00-05:00</updated><author><name>Michael Kelly Reneer</name></author><id>tag:michaelreneer.com,2012-12-09:hello-world/</id><summary type="html">&lt;p&gt;I have recently begun working professionally with &lt;a href="http://www.python.org" title="Python"&gt;Python&lt;/a&gt; and decided in
order to truly have any &lt;em&gt;fun&lt;/em&gt;, I needed to dive in with some of my free time.
For a while I have been interested in starting a blog. Being more keen on
static site generation than &lt;a href="http://wordpress.com" title="WordPress"&gt;WordPress&lt;/a&gt; configuration and wanting to learn
python - I started looking for a python solution for a personal blog.&lt;/p&gt;
&lt;p&gt;After a few minutes of googling I gave &lt;a href="http://hyde.github.com" title="Hyde"&gt;Hyde&lt;/a&gt; a try. Installed everything, got
everything working, building, got real excited, etc... and then decided it
wasn't for me. Not really sure what turned me off. Kept looking and found
&lt;a href="https://github.com/getpelican/pelican" title="Pelican"&gt;Pelican&lt;/a&gt; which had some great documentation and lot of activity on the
project. Now here you are reading a hello world blog entry written in
&lt;a href="http://daringfireball.net/projects/markdown/" title="Markdown"&gt;Markdown&lt;/a&gt;, built with pelican, and hosted on &lt;a href="http://github.com" title="GitHub"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I am currently using OS X and the Terminal app. Here's what I did...&lt;/p&gt;
&lt;h2&gt;Environment&lt;/h2&gt;
&lt;p&gt;First install packages &lt;a href="http://pypi.python.org/pypi/pip" title="pip"&gt;pip&lt;/a&gt;, &lt;a href="http://pypi.python.org/pypi/virtualenv" title="virtualenv"&gt;virtualenv&lt;/a&gt;, and &lt;a href="http://pypi.python.org/pypi/virtualenvwrapper" title="virtualenvwrapper"&gt;virtualenvwrapper&lt;/a&gt;.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;sudo easy_install pip
sudo pip install virtualenv
sudo pip install virtualenvwrapper
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Update &lt;code&gt;~/.bash_profile&lt;/code&gt; by adding:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;WORKON_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;HOME&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;/.virtualenvs
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PROJECT_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;HOME&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;/Documents/Developer
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;VIRTUALENVWRAPPER_SCRIPT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/bin/virtualenvwrapper.sh
&lt;span class="nb"&gt;source&lt;/span&gt; /usr/local/bin/virtualenvwrapper_lazy.sh
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PIP_VIRTUALENV_BASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;WORKON_HOME&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PIP_RESPECT_VIRTUALENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Please read the &lt;a href="http://virtualenvwrapper.readthedocs.org/en/latest/command_ref.html" title="virtualenvwrapper goodies"&gt;virtualenvwrapper reference&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Pelican&lt;/h2&gt;
&lt;p&gt;Create the virtual environment.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;mkvirtualenv --no-site-packages michaelreneer.github.com
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Setup the project.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;mkdir ~/Documents/Developer/michaelreneer.github.com
&lt;span class="nb"&gt;cd&lt;/span&gt; ~/Documents/Developer/michaelreneer.github.com
setvirtualenvproject
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Install packages.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;pip install pelican Markdown
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Run pelican quickstart.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;pelican-quickstart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Please read the &lt;a href="http://pelican.readthedocs.org/en/3.1.1/getting_started.html" title="Pelican Documentation"&gt;pelican documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;GitHub&lt;/h2&gt;
&lt;p&gt;I also experimented a little with how the project lives in GitHub and locally.
To start, the static html in the &lt;code&gt;master&lt;/code&gt; branch of the project named
&lt;code&gt;USERNAME.github.com&lt;/code&gt; is served up as your user page. Free hosting.&lt;/p&gt;
&lt;p&gt;I first tried organizing the source that generated the html as a subdirectory in
the &lt;code&gt;master&lt;/code&gt; branch. This was nice because I had only one branch to manage; but
because everything was in one branch, managing pull requests would be more
complicated since I would only want to merge changes that updated the source.&lt;/p&gt;
&lt;p&gt;So I ended up pushing the source to the &lt;code&gt;source&lt;/code&gt; branch and the content to the
&lt;code&gt;master&lt;/code&gt; branch. This way I can automatically decline all pull requests to
the &lt;code&gt;master&lt;/code&gt; branch. Locally, I have each branch cloned into a different
directory named for the branch.&lt;/p&gt;
&lt;p&gt;I will eventually script the process so that immediately after I
push to the &lt;code&gt;source&lt;/code&gt; branch, my pelican build runs, copies its output to the
&lt;code&gt;master&lt;/code&gt; branch, and finished by pushing the &lt;code&gt;master&lt;/code&gt; branch. Eliminating any
branch switching antics.&lt;/p&gt;</summary><category term="blog"></category><category term="pelican"></category></entry></feed>