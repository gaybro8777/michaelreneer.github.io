<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Michael Reneer</title><link href="http://michaelreneer.com/" rel="alternate"></link><link href="http://michaelreneer.com/feeds/all.atom.xml" rel="self"></link><id>http://michaelreneer.com/</id><updated>2013-04-14T00:00:00-04:00</updated><entry><title>The Bootstrap Fixed Grid</title><link href="http://michaelreneer.com/the-bootstrap-fixed-grid/" rel="alternate"></link><updated>2013-04-14T00:00:00-04:00</updated><author><name>Michael Kelly Reneer</name></author><id>tag:michaelreneer.com,2013-04-14:the-bootstrap-fixed-grid/</id><summary type="html">&lt;p&gt;One of the first things I wanted to do with my blog - after exploring pelican -
was to begin digging into some responsive layouts. I wanted a fixed-width
design with various layouts and I wanted to test out a framework instead of
build from scratch.&lt;/p&gt;
&lt;p&gt;Surprise, I ended up implementing &lt;a href="http://twitter.github.io/bootstrap/" title="Bootstrap"&gt;Bootstrap&lt;/a&gt;. Here is what I looked at:&lt;/p&gt;
&lt;p&gt;Bootstrap seemed to be the most well adopted; it has a great community, great
documentation, and is actively supported. I didn't care for any of the UI
tools, but it was easy to build and exclude all the extras I didn't want.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://foundation.zurb.com" title="Foundation"&gt;Foundation&lt;/a&gt; looked pretty good as well. Maybe a slightly smaller user base,
but still very supported and the documentation was there. Again, didn't want
the UI tools and there was a way to exclude them.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://framelessgrid.com" title="Frameless"&gt;Frameless&lt;/a&gt; also caught my eye. It ended up being less of a framework and
more of a strategy. But it was really interesting, and I may end up adopting a
fully customized approach since I am using so little of a framework that
doesn't do everything I want it to.&lt;/p&gt;
&lt;p&gt;... so now you can view the site on your phone, tablet and computer.&lt;/p&gt;
&lt;p&gt;Bootstrap ended up being very easy to implement. Checkout my &lt;a href="https://github.com/michaelreneer/michaelreneer.github.com/commit/9320672f46bd3334685ef7a6f064b09dfccaf9b0" title="Commit"&gt;commit&lt;/a&gt;. It's
probably not worth going over the steps, as the documentation on
&lt;a href="http://twitter.github.io/bootstrap/scaffolding.html" title="Scaffolding"&gt;Scaffolding&lt;/a&gt; really is clear. The only downside I have with the framework is
that it's not "&lt;a href="http://www.lukew.com/ff/entry.asp?933" title="Mobile First"&gt;mobile first&lt;/a&gt;". Foundation is designed to be mobile first,
but it doesn't come with fixed-width layouts. &lt;a href="http://thenextweb.com/dd/2013/03/10/heres-an-early-look-at-bootstrap-3-rewritten-to-be-mobile-friendly-from-the-start/" title="Bootstrap 3.0"&gt;Bootstrap 3.0&lt;/a&gt; looks very
similar to the latest iteration of Foundation, in that it is being redesigned
with mobile in mind. I am pleased for now, and will likely take a look at
Foundation, Frameless, and Bootsrtrap 3.0 sometime in the furture.&lt;/p&gt;</summary><category term="html5"></category><category term="css"></category><category term="bootstrap"></category><category term="responsive"></category><category term="fixed"></category></entry><entry><title>Save Me</title><link href="http://michaelreneer.com/save-me/" rel="alternate"></link><updated>2013-03-21T00:00:00-04:00</updated><author><name>Michael Kelly Reneer</name></author><id>tag:michaelreneer.com,2013-03-21:save-me/</id><summary type="html">&lt;p&gt;me name is pirate joe flow&lt;br /&gt;
and we gotta hacked-up boat&lt;br /&gt;
rowin' and rowin' to shore&lt;br /&gt;
lookin' in me cracked-up scope  &lt;/p&gt;
&lt;p&gt;we sail up to me land ho&lt;br /&gt;
and quicken our sped-up float&lt;br /&gt;
with the sails tied tight yo&lt;br /&gt;
and rum in our dried-up throat  &lt;/p&gt;
&lt;p&gt;[chorus]&lt;br /&gt;
gotta patch in me eye&lt;br /&gt;
could not see ya baby&lt;br /&gt;
washed up to ya feet&lt;br /&gt;
gotta hope ya save me&lt;br /&gt;
lookin' fer me treasure&lt;br /&gt;
and I saw what I see&lt;br /&gt;
me parrot flew away&lt;br /&gt;
to where me heart may be  &lt;/p&gt;
&lt;p&gt;so got me one leg left now&lt;br /&gt;
only it's me lame that's wood&lt;br /&gt;
both me hand are here with five&lt;br /&gt;
to find me treasure I could  &lt;/p&gt;
&lt;p&gt;see me right eye is patched&lt;br /&gt;
and on me left shoulder stood&lt;br /&gt;
a parrot that talks more&lt;br /&gt;
than any mate ever would  &lt;/p&gt;
&lt;p&gt;two bandanas on me neck&lt;br /&gt;
and mean as a bronze mace&lt;br /&gt;
so when ya come up to me&lt;br /&gt;
I'll rip off and bite ya face  &lt;/p&gt;
&lt;p&gt;and in me goes more liquor&lt;br /&gt;
to me gullet with no chase&lt;br /&gt;
more than any man alive&lt;br /&gt;
but two more'll end the race  &lt;/p&gt;
&lt;p&gt;[chorus]  &lt;/p&gt;
&lt;p&gt;but me boats hung on ya' reef&lt;br /&gt;
crew went and rowed into it&lt;br /&gt;
ya' isle jumped in me path&lt;br /&gt;
me boats where the wind blew it  &lt;/p&gt;
&lt;p&gt;and pirate life's got me heart&lt;br /&gt;
black and with a hole through it&lt;br /&gt;
this life was never for me&lt;br /&gt;
though me mates never knew it  &lt;/p&gt;
&lt;p&gt;now me crews all bruised-up&lt;br /&gt;
they slippin' into town now&lt;br /&gt;
broken, black, and jacked-up&lt;br /&gt;
draggin' feet from they folly  &lt;/p&gt;
&lt;p&gt;see they'll sail to the seven&lt;br /&gt;
without me as they captain&lt;br /&gt;
as ya me island heaven&lt;br /&gt;
pirate life ain't happenin'  &lt;/p&gt;
&lt;p&gt;[chorus]  &lt;/p&gt;
&lt;p&gt;there's no spittin' fer me now&lt;br /&gt;
no bar hoppin' and no rum&lt;br /&gt;
no booty and no cool thou'&lt;br /&gt;
me devilish work be done  &lt;/p&gt;
&lt;p&gt;and now this ta ya I vow&lt;br /&gt;
me pirate life is over&lt;br /&gt;
with me ruckus and me row&lt;br /&gt;
and it is not easy said  &lt;/p&gt;
&lt;p&gt;that all the treasure they have&lt;br /&gt;
all the pirates on the sea&lt;br /&gt;
hold nary a water drop&lt;br /&gt;
to the love I have for thee  &lt;/p&gt;
&lt;p&gt;so what to say to the sun&lt;br /&gt;
as she sets down on me boat&lt;br /&gt;
say I'll give it all away&lt;br /&gt;
as she keeps me men afloat  &lt;/p&gt;
&lt;p&gt;[chorus]  &lt;/p&gt;</summary><category term="poetry"></category><category term="pirates"></category><category term="love"></category></entry><entry><title>Objective-C Style Guide</title><link href="http://michaelreneer.com/objective-c-style-guide/" rel="alternate"></link><updated>2013-03-02T00:00:00-05:00</updated><author><name>Michael Kelly Reneer</name></author><id>tag:michaelreneer.com,2013-03-02:objective-c-style-guide/</id><summary type="html">&lt;p&gt;Reading code can be difficult. Maybe you didn't write it; maybe seventeen people
touched it before you. My preference is to conform to whatever style is
currently being used when joining a project. In the absence of that:&lt;/p&gt;
&lt;p&gt;Consistent. Clean. Easy to read. Short.&lt;/p&gt;
&lt;h2&gt;Dot Notation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Use dot notation to access properties.&lt;/li&gt;
&lt;li&gt;Use message notation to call a method.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Whitespace&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Use spaces not tabs.&lt;/li&gt;
&lt;li&gt;Do not wrap lines.&lt;/li&gt;
&lt;li&gt;Use new lines before blocks of code.&lt;/li&gt;
&lt;li&gt;Do not open braces on a new line.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Structure&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Only define the public interface in the header.&lt;/li&gt;
&lt;li&gt;Only &lt;code&gt;#import&lt;/code&gt; the superclass, adopted protocols, and enums in the header.&lt;/li&gt;
&lt;li&gt;Don't declare methods in the private interface.&lt;/li&gt;
&lt;li&gt;Don't put two semicolons on the same line.&lt;/li&gt;
&lt;li&gt;Use #pragma marks to logically group code.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Naming&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Use descriptive variable names.&lt;/li&gt;
&lt;li&gt;Use self describing method names.&lt;/li&gt;
&lt;li&gt;Use class name prefixes.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Use descriptive variable and method names to explain code not comments.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;TODO:&lt;/code&gt; &lt;code&gt;FIXME:&lt;/code&gt; &lt;code&gt;!!!:&lt;/code&gt; and &lt;code&gt;???:&lt;/code&gt; when writing comments.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Variables&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Asterisks of pointers belong with the variable not the type.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;@property&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Use properties.&lt;/li&gt;
&lt;li&gt;Do not declare iVars.&lt;/li&gt;
&lt;li&gt;Only access iVars directly during initialization.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Booleans&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;YES&lt;/code&gt; or &lt;code&gt;NO&lt;/code&gt; not &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Do not compare to methods or properties that return &lt;code&gt;BOOL&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="ios"></category><category term="style"></category></entry><entry><title>Music Box</title><link href="http://michaelreneer.com/music-box/" rel="alternate"></link><updated>2013-02-22T00:00:00-05:00</updated><author><name>Michael Kelly Reneer</name></author><id>tag:michaelreneer.com,2013-02-22:music-box/</id><summary type="html">&lt;p&gt;oh music box of the ocean&lt;br /&gt;
you washed ashore in mystery&lt;br /&gt;
pushed overboard in commotion&lt;br /&gt;
oh you were lost far out at sea&lt;br /&gt;
now you caress the sand again&lt;br /&gt;
for those who walk the shore to see&lt;br /&gt;
you sing of all those travels when&lt;br /&gt;
you fell amidst the ships debris  &lt;/p&gt;
&lt;p&gt;oh music box of the ocean&lt;br /&gt;
look how those clouds are walking by&lt;br /&gt;
viewing sunlight in slow motion&lt;br /&gt;
not caring what you are or why&lt;br /&gt;
the beach is full of things like this&lt;br /&gt;
the people walking by they say&lt;br /&gt;
oh what could a box reminisce&lt;br /&gt;
then like those clouds they walk away  &lt;/p&gt;
&lt;p&gt;oh music box of the ocean&lt;br /&gt;
a day will come when your skies clear&lt;br /&gt;
and he lays down in emotion&lt;br /&gt;
he's just begging his heart to hear&lt;br /&gt;
you pour open your lullaby&lt;br /&gt;
when you share all that you fear&lt;br /&gt;
it's why the sun shines in the sky&lt;br /&gt;
because your smile lasts a year  &lt;/p&gt;
&lt;p&gt;oh music box of the ocean&lt;br /&gt;
oh he'll do anything for you&lt;br /&gt;
he'll dig away all the old sand&lt;br /&gt;
and make you laugh when your heart's blue&lt;br /&gt;
will you sing now that you are free&lt;br /&gt;
he won't wander where those clouds blew&lt;br /&gt;
and you've returned from the sea&lt;br /&gt;
you now know your journey is through  &lt;/p&gt;</summary><category term="poetry"></category><category term="ocean"></category><category term="love"></category></entry><entry><title>A Ghouls Victim</title><link href="http://michaelreneer.com/a-ghouls-victim/" rel="alternate"></link><updated>2013-02-11T00:00:00-05:00</updated><author><name>Michael Kelly Reneer</name></author><id>tag:michaelreneer.com,2013-02-11:a-ghouls-victim/</id><summary type="html">&lt;p&gt;so ghouls think they have no homes&lt;br /&gt;
roaming streets and innocents throats&lt;br /&gt;
climbed up beneath from dirt and tombs&lt;br /&gt;
for blood to brave the widest moats  &lt;/p&gt;
&lt;p&gt;that you tread so naive and fair&lt;br /&gt;
the darkest of the most rotted roads&lt;br /&gt;
pale skin a dress and jet hair&lt;br /&gt;
certain victim of the ghoulish bodes  &lt;/p&gt;
&lt;p&gt;shanty after shack you pass at no pace&lt;br /&gt;
a cool and eerie night it turns&lt;br /&gt;
and a chill to run your bodies lace&lt;br /&gt;
starts a pyre of fear that burns  &lt;/p&gt;
&lt;p&gt;then a ghouls caress to touch your skin&lt;br /&gt;
from crawls the deadish maggot worms&lt;br /&gt;
from blooded eyes to rancid grin&lt;br /&gt;
the rotten hand locking your neck affirms  &lt;/p&gt;
&lt;p&gt;that you tread so naive and fair&lt;br /&gt;
the darkest of the most rotted roads&lt;br /&gt;
pale skin a dress and jet hair&lt;br /&gt;
certain victim of the ghoulish bodes  &lt;/p&gt;
&lt;p&gt;and the moon hears the screaming die&lt;br /&gt;
and the murky night grow silent&lt;br /&gt;
till ghoulish steps near in spry&lt;br /&gt;
and newer fears begin where the cry went  &lt;/p&gt;</summary><category term="poetry"></category><category term="halloween"></category><category term="scary"></category></entry><entry><title>Hello World</title><link href="http://michaelreneer.com/hello-world/" rel="alternate"></link><updated>2012-12-09T00:00:00-05:00</updated><author><name>Michael Kelly Reneer</name></author><id>tag:michaelreneer.com,2012-12-09:hello-world/</id><summary type="html">&lt;p&gt;I have recently begun working professionally with &lt;a href="http://www.python.org" title="Python"&gt;Python&lt;/a&gt; and decided in
order to truly have any &lt;em&gt;fun&lt;/em&gt;, I needed to dive in with some of my free time.
For a while I have been interested in starting a blog. Being more keen on
static site generation than &lt;a href="http://wordpress.com" title="WordPress"&gt;WordPress&lt;/a&gt; configuration and wanting to learn
python - I started looking for a python solution for a personal blog.&lt;/p&gt;
&lt;p&gt;After a few minutes of googling I gave &lt;a href="http://hyde.github.com" title="Hyde"&gt;Hyde&lt;/a&gt; a try. Installed everything, got
everything working, building, got real excited, etc... and then decided it
wasn't for me. Not really sure what turned me off. Kept looking and found
&lt;a href="https://github.com/getpelican/pelican" title="Pelican"&gt;Pelican&lt;/a&gt; which had some great documentation and lot of activity on the
project. Now here you are reading a hello world blog entry written in
&lt;a href="http://daringfireball.net/projects/markdown/" title="Markdown"&gt;Markdown&lt;/a&gt;, built with pelican, and hosted on &lt;a href="http://github.com" title="GitHub"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I am currently using OS X and the Terminal app. Here's what I did...&lt;/p&gt;
&lt;h2&gt;Environment&lt;/h2&gt;
&lt;p&gt;First install packages &lt;a href="http://pypi.python.org/pypi/pip" title="pip"&gt;pip&lt;/a&gt;, &lt;a href="http://pypi.python.org/pypi/virtualenv" title="virtualenv"&gt;virtualenv&lt;/a&gt;, and &lt;a href="http://pypi.python.org/pypi/virtualenvwrapper" title="virtualenvwrapper"&gt;virtualenvwrapper&lt;/a&gt;.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;sudo easy_install pip
sudo pip install virtualenv
sudo pip install virtualenvwrapper
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Update &lt;code&gt;~/.bash_profile&lt;/code&gt; by adding:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;WORKON_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;HOME&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;/.virtualenvs
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PROJECT_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;HOME&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;/Documents/Developer
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;VIRTUALENVWRAPPER_SCRIPT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/bin/virtualenvwrapper.sh
&lt;span class="nb"&gt;source&lt;/span&gt; /usr/local/bin/virtualenvwrapper_lazy.sh
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PIP_VIRTUALENV_BASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;WORKON_HOME&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PIP_RESPECT_VIRTUALENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Please read the &lt;a href="http://virtualenvwrapper.readthedocs.org/en/latest/command_ref.html" title="virtualenvwrapper goodies"&gt;virtualenvwrapper reference&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Pelican&lt;/h2&gt;
&lt;p&gt;Create the virtual environment.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;mkvirtualenv --no-site-packages michaelreneer.github.com
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Setup the project.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;mkdir ~/Documents/Developer/michaelreneer.github.com
&lt;span class="nb"&gt;cd&lt;/span&gt; ~/Documents/Developer/michaelreneer.github.com
setvirtualenvproject
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Install packages.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;pip install pelican Markdown
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Run pelican quickstart.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;pelican-quickstart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Please read the &lt;a href="http://pelican.readthedocs.org/en/3.1.1/getting_started.html" title="Pelican Documentation"&gt;pelican documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;GitHub&lt;/h2&gt;
&lt;p&gt;I also experimented a little with how the project lives in GitHub and locally.
To start, the static html in the &lt;code&gt;master&lt;/code&gt; branch of the project named
&lt;code&gt;USERNAME.github.com&lt;/code&gt; is served up as your user page. Free hosting.&lt;/p&gt;
&lt;p&gt;I first tried organizing the source that generated the html as a subdirectory in
the &lt;code&gt;master&lt;/code&gt; branch. This was nice because I had only one branch to manage; but
because everything was in one branch, managing pull requests would be more
complicated since I would only want to merge changes that updated the source.&lt;/p&gt;
&lt;p&gt;So I ended up pushing the source to the &lt;code&gt;source&lt;/code&gt; branch and the content to the
&lt;code&gt;master&lt;/code&gt; branch. This way I can automatically decline all pull requests to
the &lt;code&gt;master&lt;/code&gt; branch. Locally, I have each branch cloned into a different
directory named for the branch.&lt;/p&gt;
&lt;p&gt;I will eventually script the process so that immediately after I
push to the &lt;code&gt;source&lt;/code&gt; branch, my pelican build runs, copies its output to the
&lt;code&gt;master&lt;/code&gt; branch, and finished by pushing the &lt;code&gt;master&lt;/code&gt; branch. Eliminating any
branch switching antics.&lt;/p&gt;</summary><category term="blog"></category><category term="pelican"></category></entry></feed>